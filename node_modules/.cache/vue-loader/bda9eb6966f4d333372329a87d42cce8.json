{"remainingRequest":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tmdgu\\vue_front\\src\\@core\\layouts\\components\\app-navbar\\components\\SearchBar.vue?vue&type=style&index=0&id=915d7a8a&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\tmdgu\\vue_front\\src\\@core\\layouts\\components\\app-navbar\\components\\SearchBar.vue","mtime":1683620026869},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682425630341},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682425630991},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1682425630891},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1682425647185},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682425602778},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1682425630991}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICd+QGNvcmUvc2Nzcy9iYXNlL2Jvb3RzdHJhcC1leHRlbmRlZC9pbmNsdWRlJzsNCkBpbXBvcnQgJ35AY29yZS9zY3NzL2Jhc2UvY29tcG9uZW50cy92YXJpYWJsZXMtZGFyayc7DQoNCnVsDQp7DQogIGxpc3Qtc3R5bGU6IG5vbmU7DQogIHBhZGRpbmc6IDA7DQogIG1hcmdpbjogMDsNCn0NCnAgew0KICBtYXJnaW46IDA7DQp9DQoNCi8qIC5hcHAtYXV0by1zdWdnZXN0IHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KfQ0KDQouYXV0by1zdWdnZXN0LXN1Z2dlc3Rpb25zLWxpc3Qgew0KICBib3gtc2hhZG93OiAwIDRweCAyNHB4IDAgcmdiYSgzNCwgNDEsIDQ3LCAwLjEpOw0KICBib3JkZXItcmFkaXVzOiA2cHg7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgdG9wOiBjYWxjKDEwMCUgKyAxcmVtKTsNCiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogIHdpZHRoOiAxMDAlOw0KfSAqLw0KDQouc3VnZ2VzdGlvbi1ncm91cC10aXRsZSB7DQogIGZvbnQtd2VpZ2h0OiA1MDA7DQogIHBhZGRpbmc6IC43NXJlbSAxcmVtIC4yNXJlbTsNCn0NCg0KLnN1Z2dlc3Rpb24tZ3JvdXAtc3VnZ2VzdGlvbiB7DQogIHBhZGRpbmc6IC43NXJlbSAxcmVtDQp9DQoNCi5zdWdnZXN0aW9uLWN1cnJlbnQtc2VsZWN0ZWQgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAkYm9keS1iZzsNCg0KICAuZGFyay1sYXlvdXQgJiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogJHRoZW1lLWRhcmstYm9keS1iZzsNCiAgfQ0KfQ0K"},{"version":3,"sources":["SearchBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4QA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"SearchBar.vue","sourceRoot":"src/@core/layouts/components/app-navbar/components","sourcesContent":["<template>\r\n  <li class=\"nav-item nav-search\">\r\n\r\n    <!-- Icon -->\r\n    <a\r\n      href=\"javascript:void(0)\"\r\n      class=\"nav-link nav-link-search\"\r\n      @click=\"showSearchBar = true\"\r\n    >\r\n      <feather-icon\r\n        icon=\"SearchIcon\"\r\n        size=\"21\"\r\n      />\r\n    </a>\r\n\r\n    <!-- Input -->\r\n    <div\r\n      class=\"search-input\"\r\n      :class=\"{'open': showSearchBar}\"\r\n    >\r\n      <div class=\"search-input-icon\">\r\n        <feather-icon icon=\"SearchIcon\" />\r\n      </div>\r\n      <!-- <input type=\"text\" placeholder=\"Explore Vuexy....\" class=\"form-control-input\"> -->\r\n      <!-- @keyup.esc=\"escPressed\" -->\r\n      <!-- @keyup.enter=\"suggestionSelected\" -->\r\n      <b-form-input\r\n        v-if=\"showSearchBar\"\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"Explore Vuexy\"\r\n        autofocus\r\n        autocomplete=\"off\"\r\n        @keyup.up=\"increaseIndex(false)\"\r\n        @keyup.down=\"increaseIndex\"\r\n        @keyup.esc=\"showSearchBar = false; resetsearchQuery()\"\r\n        @keyup.enter=\"suggestionSelected\"\r\n        @blur.stop=\"showSearchBar = false; resetsearchQuery()\"\r\n      />\r\n      <div\r\n        class=\"search-input-close\"\r\n        @click=\"showSearchBar = false; resetsearchQuery()\"\r\n      >\r\n        <feather-icon icon=\"XIcon\" />\r\n      </div>\r\n\r\n      <!-- Suggestions List -->\r\n      <vue-perfect-scrollbar\r\n        :settings=\"perfectScrollbarSettings\"\r\n        class=\"search-list search-list-main scroll-area overflow-hidden\"\r\n        :class=\"{'show': searchQuery}\"\r\n        tagname=\"ul\"\r\n      >\r\n        <li\r\n          v-for=\"(suggestion_list, grp_name, grp_index) in filteredData\"\r\n          :key=\"grp_index\"\r\n          class=\"suggestions-groups-list\"\r\n        >\r\n\r\n          <!-- Group Header -->\r\n          <p class=\"suggestion-group-title\">\r\n            <span>\r\n              {{ title(grp_name) }}\r\n            </span>\r\n          </p>\r\n\r\n          <!-- Suggestion List of each group -->\r\n          <ul>\r\n            <li\r\n              v-for=\"(suggestion, index) in suggestion_list\"\r\n              :key=\"index\"\r\n              class=\"suggestion-group-suggestion cursor-pointer\"\r\n              :class=\"{'suggestion-current-selected': currentSelected === `${grp_index}.${index}`}\"\r\n              @mouseenter=\"currentSelected = `${grp_index}.${index}`\"\r\n              @mousedown.prevent=\"suggestionSelected(grp_name, suggestion)\"\r\n            >\r\n              <b-link\r\n                v-if=\"grp_name === 'pages'\"\r\n                class=\"p-0\"\r\n              >\r\n                <feather-icon\r\n                  :icon=\"suggestion.icon\"\r\n                  class=\"mr-75\"\r\n                />\r\n                <span class=\"align-middle\">{{ suggestion.title }}</span>\r\n              </b-link>\r\n              <template v-else-if=\"grp_name === 'files'\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  <b-img\r\n                    :src=\"suggestion.icon\"\r\n                    class=\"mr-1\"\r\n                    height=\"32\"\r\n                  />\r\n                  <div>\r\n                    <p>{{ suggestion.file_name }}</p>\r\n                    <small>by {{ suggestion.from }}</small>\r\n                  </div>\r\n                  <small class=\"ml-auto\">{{ suggestion.size }}</small>\r\n                </div>\r\n              </template>\r\n              <template v-else-if=\"grp_name === 'contacts'\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  <b-avatar\r\n                    :src=\"suggestion.img\"\r\n                    class=\"mr-1\"\r\n                    size=\"32\"\r\n                  />\r\n                  <div>\r\n                    <p>{{ suggestion.name }}</p>\r\n                    <small>{{ suggestion.email }}</small>\r\n                  </div>\r\n                  <small class=\"ml-auto\">{{ suggestion.time }}</small>\r\n                </div>\r\n              </template>\r\n            </li>\r\n\r\n            <li\r\n              v-if=\"!suggestion_list.length && searchQuery\"\r\n              class=\"suggestion-group-suggestion no-results\"\r\n            >\r\n              <p>No Results Found.</p>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </vue-perfect-scrollbar>\r\n    </div>\r\n  </li>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  BFormInput, BLink, BImg, BAvatar,\r\n} from 'bootstrap-vue'\r\nimport { ref, watch } from '@vue/composition-api'\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\nimport useAutoSuggest from '@core/components/app-auto-suggest/useAutoSuggest'\r\nimport { title } from '@core/utils/filter'\r\nimport router from '@/router'\r\nimport store from '@/store'\r\nimport searchAndBookmarkData from '../search-and-bookmark-data'\r\n\r\nexport default {\r\n  components: {\r\n    BFormInput,\r\n    BLink,\r\n    BImg,\r\n    BAvatar,\r\n    VuePerfectScrollbar,\r\n  },\r\n  setup() {\r\n    const showSearchBar = ref(false)\r\n\r\n    const perfectScrollbarSettings = {\r\n      maxScrollbarLength: 60,\r\n    }\r\n\r\n    const suggestionSelected = (grpName, suggestion) => {\r\n      // If parameter is not provided => Use current selected\r\n      if (!suggestion) {\r\n        // If currentSelected value is -1 => No value/item is selected (Prevent Errors)\r\n        /* eslint-disable no-use-before-define, no-param-reassign */\r\n        if (currentSelected.value !== -1) {\r\n          /* eslint-disable no-use-before-define, no-param-reassign */\r\n          const [grpIndex, itemIndex] = currentSelected.value.split('.')\r\n          grpName = Object.keys(filteredData.value)[grpIndex]\r\n          suggestion = filteredData.value[grpName][itemIndex]\r\n          /* eslint-enable */\r\n        }\r\n      }\r\n      if (grpName === 'pages') router.push(suggestion.route).catch(() => {})\r\n      // eslint-disable-next-line no-use-before-define\r\n      resetsearchQuery()\r\n      showSearchBar.value = false\r\n    }\r\n\r\n    const {\r\n      searchQuery,\r\n      resetsearchQuery,\r\n      filteredData,\r\n    } = useAutoSuggest({ data: searchAndBookmarkData, searchLimit: 4 })\r\n\r\n    watch(searchQuery, val => {\r\n      store.commit('app/TOGGLE_OVERLAY', Boolean(val))\r\n    })\r\n\r\n    const currentSelected = ref(-1)\r\n    watch(filteredData, val => {\r\n      if (!Object.values(val).some(obj => obj.length)) {\r\n        currentSelected.value = -1\r\n      } else {\r\n        // Auto Select first item if it's not item-404\r\n        let grpIndex = null\r\n\r\n        // eslint-disable-next-line no-restricted-syntax\r\n        for (const [index, grpSuggestions] of Object.values(val).entries()) {\r\n          if (grpSuggestions.length) {\r\n            grpIndex = index\r\n            break\r\n          }\r\n        }\r\n\r\n        if (grpIndex !== null) currentSelected.value = `${grpIndex}.0`\r\n      }\r\n    })\r\n\r\n    const increaseIndex = (val = true) => {\r\n      /* eslint-disable no-lonely-if, no-plusplus */\r\n\r\n      // If there's no matching items\r\n      if (!Object.values(filteredData.value).some(grpItems => grpItems.length)) return\r\n\r\n      const [grpIndex, itemIndex] = currentSelected.value.split('.')\r\n\r\n      const grpArr = Object.entries(filteredData.value)\r\n      const activeGrpTotalItems = grpArr[grpIndex][1].length\r\n\r\n      if (val) {\r\n        // If active item is not of last item in grp\r\n        if (activeGrpTotalItems - 1 > itemIndex) {\r\n          currentSelected.value = `${grpIndex}.${Number(itemIndex) + 1}`\r\n\r\n        // If active item grp is not last in grp list\r\n        } else if (grpIndex < grpArr.length - 1) {\r\n          for (let i = Number(grpIndex) + 1; i < grpArr.length; i++) {\r\n            // If navigating group have items => Then move in that group\r\n            if (grpArr[i][1].length > 0) {\r\n              currentSelected.value = `${Number(i)}.0`\r\n              break\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // If active item is not of first item in grp\r\n        if (Number(itemIndex)) {\r\n          currentSelected.value = `${grpIndex}.${Number(itemIndex) - 1}`\r\n\r\n        // If active item grp  is not first in grp list\r\n        } else if (Number(grpIndex)) {\r\n          for (let i = Number(grpIndex) - 1; i >= 0; i--) {\r\n            // If navigating group have items => Then move in that group\r\n            if (grpArr[i][1].length > 0) {\r\n              currentSelected.value = `${i}.${grpArr[i][1].length - 1}`\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n      /* eslint-enable no-lonely-if, no-plusplus */\r\n    }\r\n\r\n    return {\r\n      showSearchBar,\r\n      perfectScrollbarSettings,\r\n      searchAndBookmarkData,\r\n      title,\r\n      suggestionSelected,\r\n      currentSelected,\r\n      increaseIndex,\r\n\r\n      // AutoSuggest\r\n      searchQuery,\r\n      resetsearchQuery,\r\n      filteredData,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~@core/scss/base/bootstrap-extended/include';\r\n@import '~@core/scss/base/components/variables-dark';\r\n\r\nul\r\n{\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\np {\r\n  margin: 0;\r\n}\r\n\r\n/* .app-auto-suggest {\r\n  position: relative;\r\n}\r\n\r\n.auto-suggest-suggestions-list {\r\n  box-shadow: 0 4px 24px 0 rgba(34, 41, 47, 0.1);\r\n  border-radius: 6px;\r\n  position: absolute;\r\n  top: calc(100% + 1rem);\r\n  background-color: white;\r\n  width: 100%;\r\n} */\r\n\r\n.suggestion-group-title {\r\n  font-weight: 500;\r\n  padding: .75rem 1rem .25rem;\r\n}\r\n\r\n.suggestion-group-suggestion {\r\n  padding: .75rem 1rem\r\n}\r\n\r\n.suggestion-current-selected {\r\n  background-color: $body-bg;\r\n\r\n  .dark-layout & {\r\n    background-color: $theme-dark-body-bg;\r\n  }\r\n}\r\n</style>\r\n"]}]}