{"remainingRequest":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tmdgu\\vue_front\\src\\@core\\layouts\\layout-vertical\\LayoutVertical.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\tmdgu\\vue_front\\src\\@core\\layouts\\layout-vertical\\LayoutVertical.vue","mtime":1683620026894},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682425630341},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682425630991},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1682425630891},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1682425647185},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682425602778},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1682425630991}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAifkBjb3JlL3Njc3MvYmFzZS90aGVtZXMvYm9yZGVyZWQtbGF5b3V0LnNjc3MiOw0K"},{"version":3,"sources":["LayoutVertical.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKA","file":"LayoutVertical.vue","sourceRoot":"src/@core/layouts/layout-vertical","sourcesContent":["<template>\r\n  <div\r\n    class=\"vertical-layout h-100\"\r\n    :class=\"[layoutClasses]\"\r\n    :data-col=\"isNavMenuHidden ? '1-column' : null\"\r\n  >\r\n    <!-- Navbar -->\r\n    <b-navbar\r\n      :toggleable=\"false\"\r\n      :variant=\"navbarBackgroundColor\"\r\n      class=\"header-navbar navbar navbar-shadow align-items-center\"\r\n      :class=\"[navbarTypeClass]\"\r\n    >\r\n      <slot\r\n        name=\"navbar\"\r\n        :toggleVerticalMenuActive=\"toggleVerticalMenuActive\"\r\n        :navbarBackgroundColor=\"navbarBackgroundColor\"\r\n        :navbarTypeClass=\"[...navbarTypeClass, 'header-navbar navbar navbar-shadow align-items-center']\"\r\n      >\r\n        <app-navbar-vertical-layout :toggle-vertical-menu-active=\"toggleVerticalMenuActive\" />\r\n      </slot>\r\n    </b-navbar>\r\n    <!--/ Navbar -->\r\n\r\n    <!-- Vertical Nav Menu -->\r\n    <vertical-nav-menu\r\n      v-if=\"!isNavMenuHidden\"\r\n      :is-vertical-menu-active=\"isVerticalMenuActive\"\r\n      :toggle-vertical-menu-active=\"toggleVerticalMenuActive\"\r\n    >\r\n      <template #header=\"slotProps\">\r\n        <slot\r\n          name=\"vertical-menu-header\"\r\n          v-bind=\"slotProps\"\r\n        />\r\n      </template>\r\n    </vertical-nav-menu>\r\n    <!-- /Vertical Nav Menu -->\r\n\r\n    <!-- Vertical Nav Menu Overlay -->\r\n    <div\r\n      class=\"sidenav-overlay\"\r\n      :class=\"overlayClasses\"\r\n      @click=\"isVerticalMenuActive = false\"\r\n    />\r\n    <!-- /Vertical Nav Menu Overlay -->\r\n\r\n    <!-- Content -->\r\n\r\n    <!-- CONTENT TYPE: Left -->\r\n    <transition\r\n      :name=\"routerTransition\"\r\n      mode=\"out-in\"\r\n    >\r\n      <component\r\n        :is=\"layoutContentRenderer\"\r\n        :key=\"layoutContentRenderer === 'layout-content-renderer-left' ? $route.meta.navActiveLink || $route.name : null\"\r\n      >\r\n        <template\r\n          v-for=\"(index, name) in $scopedSlots\"\r\n          v-slot:[name]=\"data\"\r\n        >\r\n          <slot\r\n            :name=\"name\"\r\n            v-bind=\"data\"\r\n          />\r\n        </template>\r\n      </component>\r\n    </transition>\r\n    <!--/ Content -->\r\n\r\n    <!-- Footer -->\r\n    <footer\r\n      class=\"footer footer-light\"\r\n      :class=\"[footerTypeClass]\"\r\n    >\r\n      <slot name=\"footer\">\r\n        <app-footer />\r\n      </slot>\r\n    </footer>\r\n    <!-- /Footer -->\r\n\r\n    <slot name=\"customizer\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { onUnmounted } from '@vue/composition-api'\r\nimport AppNavbarVerticalLayout from '@core/layouts/components/app-navbar/AppNavbarVerticalLayout.vue'\r\nimport AppFooter from '@core/layouts/components/AppFooter.vue'\r\nimport useAppConfig from '@core/app-config/useAppConfig'\r\nimport { BNavbar } from 'bootstrap-vue'\r\nimport LayoutContentRendererDefault from '@core/layouts/components/layout-content-renderer/LayoutContentRendererDefault.vue'\r\nimport LayoutContentRendererLeft from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeft.vue'\r\nimport LayoutContentRendererLeftDetached from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeftDetached.vue'\r\nimport VerticalNavMenu from './components/vertical-nav-menu/VerticalNavMenu.vue'\r\nimport useVerticalLayout from './useVerticalLayout'\r\nimport mixinVerticalLayout from './mixinVerticalLayout'\r\n\r\nexport default {\r\n  components: {\r\n    // AppBreadcrumb,\r\n    AppNavbarVerticalLayout,\r\n    AppFooter,\r\n    VerticalNavMenu,\r\n    BNavbar,\r\n    LayoutContentRendererLeftDetached,\r\n    LayoutContentRendererLeft,\r\n    LayoutContentRendererDefault,\r\n  },\r\n  mixins: [mixinVerticalLayout],\r\n  computed: {\r\n    layoutContentRenderer() {\r\n      const rendererType = this.$route.meta.contentRenderer\r\n      if (rendererType === 'sidebar-left') return 'layout-content-renderer-left'\r\n      if (rendererType === 'sidebar-left-detached') return 'layout-content-renderer-left-detached'\r\n      return 'layout-content-renderer-default'\r\n    },\r\n  },\r\n  setup() {\r\n    const {\r\n      routerTransition, navbarBackgroundColor, navbarType, footerType, isNavMenuHidden,\r\n    } = useAppConfig()\r\n\r\n    const {\r\n      isVerticalMenuActive,\r\n      toggleVerticalMenuActive,\r\n      isVerticalMenuCollapsed,\r\n      layoutClasses,\r\n      overlayClasses,\r\n      resizeHandler,\r\n      navbarTypeClass,\r\n      footerTypeClass,\r\n    } = useVerticalLayout(navbarType, footerType)\r\n\r\n    // Resize handler\r\n    resizeHandler()\r\n    window.addEventListener('resize', resizeHandler)\r\n    onUnmounted(() => {\r\n      window.removeEventListener('resize', resizeHandler)\r\n    })\r\n\r\n    return {\r\n      isVerticalMenuActive,\r\n      toggleVerticalMenuActive,\r\n      isVerticalMenuCollapsed,\r\n      overlayClasses,\r\n      layoutClasses,\r\n      navbarTypeClass,\r\n      footerTypeClass,\r\n\r\n      // App Config\r\n      routerTransition,\r\n      navbarBackgroundColor,\r\n      isNavMenuHidden,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~@core/scss/base/themes/bordered-layout.scss\";\r\n</style>\r\n"]}]}