{"remainingRequest":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tmdgu\\vue_front\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\tmdgu\\vue_front\\src\\App.vue","mtime":1683620245269},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682425630341},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682425630991},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1682425630891},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682425602778},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1682425630991}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCi5zY3JvbGxTdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sKewogIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAwIDZweCByZ2JhKDAsMCwwLDAuMyk7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1MCw2MCwxNTAsMSk7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKICBib3gtc2hhZG93OiBpbnNldCAwcHggMHB4IDVweCByZ2JhKDUwLDUwLDE1MCwxKTsKfQoKLnNjcm9sbFN0eWxlOjotd2Via2l0LXNjcm9sbGJhcgp7CiAgd2lkdGg6IDEwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1MCw1MCwxNTAsMCk7Cn0KCi5zY3JvbGxTdHlsZTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIKewogIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7CiAgYm9yZGVyOiA0cHggc29saWQgdHJhbnNwYXJlbnQ7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKICAvKiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwKICBsZWZ0IGJvdHRvbSwKICBsZWZ0IHRvcCwKICBjb2xvci1zdG9wKDAuNDQsIHJnYigxMjIsMTUzLDIxNykpLAogIGNvbG9yLXN0b3AoMC43MiwgcmdiKDczLDEyNSwxODkpKSwKICBjb2xvci1zdG9wKDAuODYsIHJnYigyOCw1OCwxNDgpKSk7Ki8KICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzM2N2YwOwp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template\r\n  style=\"overflow: scroll;\"\r\n  class=\"scrollStyle\"\r\n>\r\n  <div\r\n    id=\"app\"\r\n    class=\"h-100\"\r\n    :class=\"[skinClasses]\"\r\n  >\r\n    <component :is=\"layout\">\r\n      <router-view />\r\n    </component>\r\n\r\n  </div>\r\n</template>\r\n<style>\r\n  .scrollStyle::-webkit-scrollbar-track\r\n  {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\r\n    background-color: rgba(50,60,150,1);\r\n    border-radius: 10px;\r\n    box-shadow: inset 0px 0px 5px rgba(50,50,150,1);\r\n  }\r\n\r\n  .scrollStyle::-webkit-scrollbar\r\n  {\r\n    width: 10px;\r\n    background-color: rgba(50,50,150,0);\r\n  }\r\n\r\n  .scrollStyle::-webkit-scrollbar-thumb\r\n  {\r\n    background-clip: padding-box;\r\n    border: 4px solid transparent;\r\n    border-radius: 10px;\r\n    /*    background-image: -webkit-gradient(linear,\r\n    left bottom,\r\n    left top,\r\n    color-stop(0.44, rgb(122,153,217)),\r\n    color-stop(0.72, rgb(73,125,189)),\r\n    color-stop(0.86, rgb(28,58,148)));*/\r\n    background-color: #7367f0;\r\n  }\r\n</style>\r\n<script>\r\n\r\n// This will be populated in `beforeCreate` hook\r\nimport { $themeColors, $themeBreakpoints, $themeConfig } from '@themeConfig'\r\nimport { provideToast } from 'vue-toastification/composition'\r\nimport { watch } from '@vue/composition-api'\r\nimport useAppConfig from '@core/app-config/useAppConfig'\r\n\r\nimport { useWindowSize, useCssVar } from '@vueuse/core'\r\n\r\nimport store from '@/store'\r\n//test\r\n//로컬마스터\r\nconst LayoutVertical = () => import('@/layouts/vertical/LayoutVertical.vue')\r\nconst LayoutHorizontal = () => import('@/layouts/horizontal/LayoutHorizontal.vue')\r\nconst LayoutFull = () => import('@/layouts/full/LayoutFull.vue')\r\n\r\nexport default {\r\n  components: {\r\n    // Layouts\r\n    LayoutHorizontal,\r\n    LayoutVertical,\r\n    LayoutFull,\r\n\r\n  },\r\n  // ! We can move this computed: layout & contentLayoutType once we get to use Vue 3\r\n  // Currently, router.currentRoute is not reactive and doesn't trigger any change\r\n  computed: {\r\n    layout() {\r\n      if (this.$route.meta.layout === 'full') return 'layout-full'\r\n      return `layout-${this.contentLayoutType}`\r\n    },\r\n    contentLayoutType() {\r\n      return this.$store.state.appConfig.layout.type\r\n    },\r\n  },\r\n  beforeCreate() {\r\n    // Set colors in theme\r\n    const colors = ['primary', 'secondary', 'success', 'info', 'warning', 'danger', 'light', 'dark']\r\n\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0, len = colors.length; i < len; i++) {\r\n      $themeColors[colors[i]] = useCssVar(`--${colors[i]}`, document.documentElement).value.trim()\r\n    }\r\n\r\n    // Set Theme Breakpoints\r\n    const breakpoints = ['xs', 'sm', 'md', 'lg', 'xl']\r\n\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0, len = breakpoints.length; i < len; i++) {\r\n      $themeBreakpoints[breakpoints[i]] = Number(useCssVar(`--breakpoint-${breakpoints[i]}`, document.documentElement).value.slice(0, -2))\r\n    }\r\n\r\n    // Set RTL\r\n    const { isRTL } = $themeConfig.layout\r\n    document.documentElement.setAttribute('dir', isRTL ? 'rtl' : 'ltr')\r\n  },\r\n  setup() {\r\n    const { skin, skinClasses } = useAppConfig()\r\n\r\n    // If skin is dark when initialized => Add class to body\r\n    if (skin.value === 'dark') document.body.classList.add('dark-layout')\r\n\r\n    // Provide toast for Composition API usage\r\n    // This for those apps/components which uses composition API\r\n    // Demos will still use Options API for ease\r\n    provideToast({\r\n      hideProgressBar: true,\r\n      closeOnClick: false,\r\n      closeButton: false,\r\n      icon: false,\r\n      timeout: 3000,\r\n      transition: 'Vue-Toastification__fade',\r\n    })\r\n\r\n    // Set Window Width in store\r\n    store.commit('app/UPDATE_WINDOW_WIDTH', window.innerWidth)\r\n    const { width: windowWidth } = useWindowSize()\r\n    watch(windowWidth, val => {\r\n      store.commit('app/UPDATE_WINDOW_WIDTH', val)\r\n    })\r\n\r\n    return {\r\n      skinClasses,\r\n    }\r\n  },\r\n}\r\n</script>\r\n"]}]}