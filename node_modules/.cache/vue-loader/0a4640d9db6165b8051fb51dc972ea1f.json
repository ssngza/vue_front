{"remainingRequest":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tmdgu\\vue_front\\src\\@core\\layouts\\layout-horizontal\\LayoutHorizontal.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\tmdgu\\vue_front\\src\\@core\\layouts\\layout-horizontal\\LayoutHorizontal.vue","mtime":1683620026877},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682425630341},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682425630991},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1682425630891},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1682425647185},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682425602778},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1682425630991}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICJ+QGNvcmUvc2Nzcy9iYXNlL3RoZW1lcy9ib3JkZXJlZC1sYXlvdXQuc2NzcyI7DQo="},{"version":3,"sources":["LayoutHorizontal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsNA","file":"LayoutHorizontal.vue","sourceRoot":"src/@core/layouts/layout-horizontal","sourcesContent":["<template>\r\n  <div\r\n    class=\"horizontal-layout\"\r\n    :class=\"[layoutClasses]\"\r\n    :data-col=\"isNavMenuHidden ? '1-column' : null\"\r\n    style=\"height:inherit\"\r\n  >\r\n\r\n    <!-- NAVBAR -->\r\n    <b-navbar\r\n      :style=\"{\r\n        backgroundColor: navbarType === 'static' && scrolledTo && skin === 'light' ? 'white' : null,\r\n        boxShadow: navbarType === 'static' && scrolledTo ? 'rgba(0, 0, 0, 0.05) 0px 4px 20px 0px' : null,\r\n      }\"\r\n      :toggleable=\"false\"\r\n      class=\"header-navbar navbar-shadow align-items-center navbar-brand-center navbar-fixed\"\r\n      :class=\"{'fixed-top': $store.getters['app/currentBreakPoint'] !== 'xl'}\"\r\n    >\r\n      <slot\r\n        name=\"navbar\"\r\n        :toggleVerticalMenuActive=\"toggleVerticalMenuActive\"\r\n      >\r\n        <app-navbar-horizontal-layout-brand />\r\n        <app-navbar-horizontal-layout :toggle-vertical-menu-active=\"toggleVerticalMenuActive\" />\r\n      </slot>\r\n    </b-navbar>\r\n    <!--/ NAVBAR -->\r\n\r\n    <div class=\"horizontal-menu-wrapper\">\r\n      <div\r\n        v-if=\"!isNavMenuHidden\"\r\n        class=\"header-navbar navbar-expand-sm navbar navbar-horizontal navbar-light navbar-shadow menu-border d-none d-xl-block\"\r\n        :class=\"[navbarMenuTypeClass]\"\r\n      >\r\n        <horizontal-nav-menu />\r\n      </div>\r\n\r\n      <!-- Vertical Nav Menu -->\r\n      <vertical-nav-menu\r\n        :is-vertical-menu-active=\"isVerticalMenuActive\"\r\n        :toggle-vertical-menu-active=\"toggleVerticalMenuActive\"\r\n        class=\"d-block d-xl-none\"\r\n      >\r\n        <template #header=\"slotProps\">\r\n          <slot\r\n            name=\"vertical-menu-header\"\r\n            v-bind=\"slotProps\"\r\n          />\r\n        </template>\r\n      </vertical-nav-menu>\r\n    <!-- /Vertical Nav Menu -->\r\n    </div>\r\n\r\n    <!-- Vertical Nav Menu Overlay -->\r\n    <div\r\n      class=\"sidenav-overlay\"\r\n      :class=\"overlayClasses\"\r\n      @click=\"isVerticalMenuActive = false\"\r\n    />\r\n    <!-- /Vertical Nav Menu Overlay -->\r\n\r\n    <!-- CONTENT -->\r\n    <!-- CONTENT TYPE: Left -->\r\n    <transition\r\n      :name=\"routerTransition\"\r\n      mode=\"out-in\"\r\n    >\r\n      <component\r\n        :is=\"layoutContentRenderer\"\r\n        :key=\"layoutContentRenderer === 'layout-content-renderer-left' ? $route.meta.navActiveLink || $route.name : null\"\r\n      >\r\n        <template\r\n          v-for=\"(index, name) in $scopedSlots\"\r\n          v-slot:[name]=\"data\"\r\n        >\r\n          <slot\r\n            :name=\"name\"\r\n            v-bind=\"data\"\r\n          />\r\n        </template>\r\n      </component>\r\n    </transition>\r\n    <!--/ Content -->\r\n    <!--/ CONTENT -->\r\n\r\n    <!-- Footer -->\r\n    <footer\r\n      class=\"footer footer-light\"\r\n      :class=\"[footerTypeClass]\"\r\n    >\r\n      <slot name=\"footer\">\r\n        <app-footer />\r\n      </slot>\r\n    </footer>\r\n\r\n    <slot name=\"customizer\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AppBreadcrumb from '@core/layouts/components/AppBreadcrumb.vue'\r\nimport AppNavbarHorizontalLayout from '@core/layouts/components/app-navbar/AppNavbarHorizontalLayout.vue'\r\nimport AppNavbarHorizontalLayoutBrand from '@core/layouts/components/app-navbar/AppNavbarHorizontalLayoutBrand.vue'\r\nimport AppFooter from '@core/layouts/components/AppFooter.vue'\r\nimport useAppConfig from '@core/app-config/useAppConfig'\r\nimport { BNavbar } from 'bootstrap-vue'\r\nimport { useScrollListener } from '@core/comp-functions/misc/event-listeners'\r\n\r\nimport { onUnmounted } from '@vue/composition-api'\r\n\r\n// Content Renderer\r\nimport LayoutContentRendererDefault from '@core/layouts/components/layout-content-renderer/LayoutContentRendererDefault.vue'\r\nimport LayoutContentRendererLeft from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeft.vue'\r\nimport LayoutContentRendererLeftDetached from '@core/layouts/components/layout-content-renderer/LayoutContentRendererLeftDetached.vue'\r\nimport useLayoutHorizontal from './useLayoutHorizontal'\r\nimport HorizontalNavMenu from './components/horizontal-nav-menu/HorizontalNavMenu.vue'\r\n\r\n// Vertical Menu\r\n/* eslint-disable import/order */\r\nimport VerticalNavMenu from '@core/layouts/layout-vertical/components/vertical-nav-menu/VerticalNavMenu.vue'\r\nimport useVerticalLayout from '@core/layouts/layout-vertical/useVerticalLayout'\r\nimport mixinLayoutHorizontal from './mixinLayoutHorizontal'\r\n/* eslint-enable import/order */\r\n\r\nexport default {\r\n  components: {\r\n    AppBreadcrumb,\r\n    AppNavbarHorizontalLayout,\r\n    AppNavbarHorizontalLayoutBrand,\r\n    AppFooter,\r\n    HorizontalNavMenu,\r\n\r\n    BNavbar,\r\n\r\n    // Content Renderer\r\n    LayoutContentRendererDefault,\r\n    LayoutContentRendererLeft,\r\n    LayoutContentRendererLeftDetached,\r\n\r\n    // Vertical Menu\r\n    VerticalNavMenu,\r\n  },\r\n  mixins: [mixinLayoutHorizontal],\r\n  computed: {\r\n    layoutContentRenderer() {\r\n      const rendererType = this.$route.meta.contentRenderer\r\n      if (rendererType === 'sidebar-left') return 'layout-content-renderer-left'\r\n      if (rendererType === 'sidebar-left-detached') return 'layout-content-renderer-left-detached'\r\n      return 'layout-content-renderer-default'\r\n    },\r\n  },\r\n  setup() {\r\n    const {\r\n      skin,\r\n      navbarType,\r\n      footerType,\r\n      routerTransition,\r\n      isNavMenuHidden,\r\n    } = useAppConfig()\r\n\r\n    // Vertical Menu\r\n    const {\r\n      isVerticalMenuActive, toggleVerticalMenuActive, overlayClasses, resizeHandler,\r\n    } = useVerticalLayout(navbarType, footerType)\r\n\r\n    // Resize handler\r\n    resizeHandler()\r\n    window.addEventListener('resize', resizeHandler)\r\n    onUnmounted(() => {\r\n      window.removeEventListener('resize', resizeHandler)\r\n    })\r\n\r\n    const {\r\n      navbarMenuTypeClass,\r\n      layoutClasses,\r\n      footerTypeClass,\r\n    } = useLayoutHorizontal(navbarType, footerType, isVerticalMenuActive)\r\n\r\n    // Scroll Listener\r\n    const { scrolledTo } = useScrollListener()\r\n\r\n    return {\r\n      // skin\r\n      skin,\r\n\r\n      // Layout\r\n      layoutClasses,\r\n\r\n      // Navbar\r\n      navbarType,\r\n      navbarMenuTypeClass,\r\n\r\n      // Menu Hidden\r\n      isNavMenuHidden,\r\n\r\n      // Router Transition\r\n      routerTransition,\r\n\r\n      // Footer\r\n      footerTypeClass,\r\n\r\n      // Scroll Listeners\r\n      scrolledTo,\r\n\r\n      // Vertical Menu\r\n      isVerticalMenuActive,\r\n      toggleVerticalMenuActive,\r\n      overlayClasses,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~@core/scss/base/themes/bordered-layout.scss\";\r\n</style>\r\n"]}]}