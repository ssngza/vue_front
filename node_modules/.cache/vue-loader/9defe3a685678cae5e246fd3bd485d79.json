{"remainingRequest":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tmdgu\\vue_front\\src\\views\\logistic\\sales\\Estimate\\EstimateRegisteUpgrade.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\tmdgu\\vue_front\\src\\views\\logistic\\sales\\Estimate\\EstimateRegisteUpgrade.vue","mtime":1683631586568},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682425602778},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\babel-loader\\lib\\index.js","mtime":1683631548959},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682425602778},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1683631584611}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgew0KICBCQ2FyZCwgQlJvdywgQkNvbCwgQkZvcm1JbnB1dCwgQkJ1dHRvbiwgQlRhYmxlLCBCTWVkaWEsIEJBdmF0YXIsIEJMaW5rLCBCRm9ybVJhZGlvR3JvdXAsIEJDYXJkVGV4dCwNCiAgQkJhZGdlLCBCRHJvcGRvd24sIEJEcm9wZG93bkl0ZW0sIEJQYWdpbmF0aW9uLCBCVG9vbHRpcCwgQkZvcm1EYXRlcGlja2VyLCBCSW5wdXRHcm91cCwgQklucHV0R3JvdXBBcHBlbmQsDQogIEJGb3JtR3JvdXAsDQp9IGZyb20gJ2Jvb3RzdHJhcC12dWUnDQppbXBvcnQgQkVkaXRhYmxlVGFibGUgZnJvbSAnYm9vdHN0cmFwLXZ1ZS1lZGl0YWJsZS10YWJsZScNCmltcG9ydCBXb3JrSW5zdHJ1Y3Rpb25HcmlkIGZyb20gJ0AvY29tcG9uZW50cy9sb2dpc3RpYy9wcm9kdWN0aW9uL3dvcmtJbnN0cnVjdGlvbi9Xb3JrSW5zdHJ1Y3Rpb25HcmlkJw0KaW1wb3J0IFdvcmtJbnN0cnVjdGlvbkRldGFpbEdyaWQgZnJvbSAnQC9jb21wb25lbnRzL2xvZ2lzdGljL3Byb2R1Y3Rpb24vd29ya0luc3RydWN0aW9uL1dvcmtJbnN0cnVjdGlvbkRldGFpbEdyaWQnDQppbXBvcnQgQ29tbW9uR3JpZCBmcm9tICdAL2NvbXBvbmVudHMvbG9naXN0aWMvc2FsZXMvZ3JpZENvbXBvbmVudC9Db21tb25HcmlkJw0KaW1wb3J0IHsgbWFwQWN0aW9ucywgbWFwU3RhdGUgfSBmcm9tICd2dWV4Jw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBCQ2FyZCwNCiAgICBCUm93LA0KICAgIEJDb2wsDQogICAgQkZvcm1JbnB1dCwNCiAgICBCQnV0dG9uLA0KICAgIEJUYWJsZSwNCiAgICBCTWVkaWEsDQogICAgQkF2YXRhciwNCiAgICBCTGluaywNCiAgICBCQmFkZ2UsDQogICAgQkRyb3Bkb3duLA0KICAgIEJEcm9wZG93bkl0ZW0sDQogICAgQlBhZ2luYXRpb24sDQogICAgQlRvb2x0aXAsDQogICAgQkZvcm1EYXRlcGlja2VyLA0KICAgIEJJbnB1dEdyb3VwLA0KICAgIEJJbnB1dEdyb3VwQXBwZW5kLA0KICAgIEJFZGl0YWJsZVRhYmxlLA0KICAgIEJGb3JtUmFkaW9Hcm91cCwNCiAgICBCQ2FyZFRleHQsDQogICAgQkZvcm1Hcm91cCwNCg0KICAgIFdvcmtJbnN0cnVjdGlvbkdyaWQsDQogICAgV29ya0luc3RydWN0aW9uRGV0YWlsR3JpZCwNCiAgICBDb21tb25HcmlkLA0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKHsNCiAgICAgIGdyaWQ6IHN0YXRlID0+IHN0YXRlLmdyaWQsDQogICAgICBkZXRhaWxHcmlkOiBzdGF0ZSA9PiBzdGF0ZS5kZXRhaWxHcmlkLA0KICAgICAgY3VzdG9tZXJDb2RlTGlzdDogc3RhdGUgPT4gc3RhdGUuaHIuY29tcGFueS5jb21wYW55Q29kZUxpc3QsDQogICAgICBpdGVtTGlzdDogc3RhdGUgPT4gc3RhdGUubG9naS5iYXNlLml0ZW1MaXN0LA0KICAgIH0pLA0KICB9LA0KICBkYXRhOiAoKSA9PiAoew0KICAgIHN0YXJ0RGF0ZTogJzAwMDAtMDAtMCcsDQogICAgZW5kRGF0ZTogJzAwMDAtMDAtMCcsDQogICAgc2VsZWN0ZWQ6ICcnLA0KICAgIHdvcmtwbGFjZU5hbWU6ICcnLA0KICAgIHdvcmtwbGFjZUNvZGU6ICcnLA0KICAgIHNlYXJjaFdvcmtwbGFjZTogJycsDQogICAgY29tcGFueUNvZGU6ICdCUkMtMDEnLA0KICAgIHNlYXJjaENvbXBhbnlDb2RlT3B0aW9uOiAnJywNCiAgICBvcHRpb25zOiBbXSwNCiAgICBidXR0b25MaXN0OiBbDQogICAgICB7DQogICAgICAgIHZhbHVlOiAn7LaU6rCAJywNCiAgICAgICAgZXZlbnQ6ICdhZGQnLA0KICAgICAgfSwNCiAgICAgIHsNCiAgICAgICAgdmFsdWU6ICfrk7HroZ0nLA0KICAgICAgICBldmVudDogJ3JlZ2lzdCcsDQogICAgICB9LA0KICAgIF0sDQogICAgaXRlbU9wdGlvbnM6IFtdLA0KICAgIGRldGFpbEdyaWRidXR0b25MaXN0OiBbDQogICAgICB7DQogICAgICAgIHZhbHVlOiAn7LaU6rCAJywNCiAgICAgICAgZXZlbnQ6ICdhZGQnLA0KICAgICAgfSwNCiAgICBdLA0KICAgIGl0ZW1OYW1lVmFsdWU6ICcnLA0KICB9KSwNCg0KICB3YXRjaDogew0KICAgIHNlYXJjaENvbXBhbnlDb2RlT3B0aW9uKG5ld1ZhbHVlKSB7DQogICAgICBpZiAobmV3VmFsdWUgIT09ICcnKSB7DQogICAgICAgIGNvbnN0IHNlYXJjaE9wdGlvbiA9IHsgc2VhcmNoQ29uZGl0aW9uOiBuZXdWYWx1ZSwgd29ya3BsYWNlQ29kZTogdGhpcy5jb21wYW55Q29kZSB9DQogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdoci9jb21wYW55L3NlYXJjaEN1c3RvbWVyTGlzdCcsIHNlYXJjaE9wdGlvbikNCiAgICAgIH0NCiAgICB9LA0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnUkVTRVRfR1JJRCcpDQogICAgY29uc3Qgc2VhcmNoT3B0aW9uID0geyBzZWFyY2hDb25kaXRpb246ICdBTEwnLCB3b3JrcGxhY2VDb2RlOiAnQlJDLTAxJyB9DQogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2hyL2NvbXBhbnkvc2VhcmNoQ3VzdG9tZXJMaXN0Jywgc2VhcmNoT3B0aW9uKQ0KICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdsb2dpL2Jhc2UvU0VBUkNIX0lURU0nLCAnSVQtX0knKQ0KICAgIGxldCBkYXRhTGlzdCA9IFtdDQogICAgdGhpcy5jdXN0b21lckNvZGVMaXN0Lm1hcChlID0+IHsNCiAgICAgIGNvbnN0IHsgY3VzdG9tZXJOYW1lIH0gPSBlDQogICAgICBkYXRhTGlzdC5wdXNoKHsgdGV4dDogY3VzdG9tZXJOYW1lLCB2YWx1ZTogY3VzdG9tZXJOYW1lIH0pDQogICAgfSkNCiAgICBjb25zb2xlLmxvZyh0aGlzLmN1c3RvbWVyQ29kZUxpc3QpDQogICAgY29uc29sZS5sb2coZGF0YUxpc3QpDQogICAgdGhpcy5vcHRpb25zID0gZGF0YUxpc3QNCg0KICAgIGRhdGFMaXN0ID0gW10NCg0KICAgIHRoaXMuaXRlbUxpc3QubWFwKGUgPT4gew0KICAgICAgY29uc3QgeyBkZXRhaWxDb2RlTmFtZSwgZGV0YWlsQ29kZSB9ID0gZQ0KICAgICAgZGF0YUxpc3QucHVzaCh7IHRleHQ6IGRldGFpbENvZGUsIHZhbHVlOiBkZXRhaWxDb2RlTmFtZSB9KQ0KICAgIH0pDQoNCiAgICB0aGlzLml0ZW1PcHRpb25zID0gZGF0YUxpc3QNCg0KICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpDQogICAgY29uc3QgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKQ0KICAgIGNvbnN0IG1vbnRoID0gU3RyaW5nKGRhdGUuZ2V0TW9udGgoKSArIDEpLnBhZFN0YXJ0KDIsICcwJykNCiAgICBjb25zdCBkYXkgPSBTdHJpbmcoZGF0ZS5nZXREYXRlKCkpLnBhZFN0YXJ0KDIsICcwJykNCiAgICBjb25zdCB0b2RheSA9IGAke3llYXJ9LSR7bW9udGh9LSR7ZGF5fWANCiAgICBjb25zdCBsYXN0ZGF5ID0gbmV3IERhdGUoeWVhciwgbW9udGgsIDApLmdldERhdGUoKQ0KICAgIHRoaXMuc3RhcnREYXRlID0gYCR7eWVhcn0tJHttb250aH0tMDFgDQogICAgdGhpcy5lbmREYXRlID0gYCR7eWVhcn0tJHttb250aH0tJHtsYXN0ZGF5fWANCg0KICAgIGNvbnN0IHRhYmxlQ29sdW1ucyA9IFt7DQogICAgICB0YWJsZUNvbHVtbnM6IFsNCiAgICAgICAgew0KICAgICAgICAgIGtleTogJ2N1c3RvbWVyQ29kZScsDQogICAgICAgICAgbGFiZWw6ICfqsbDrnpjsspjrqoUnLA0KICAgICAgICAgIHNvcnRhYmxlOiB0cnVlLA0KICAgICAgICAgIGRhdGFUeXBlOiAnc2VsZWN0JywNCiAgICAgICAgICBvcHRpb25zOiB0aGlzLm9wdGlvbnMsDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICBrZXk6ICdlc3RpbWF0ZURhdGUnLCBsYWJlbDogJ+qyrOyggeydvOyekCcsIHNvcnRhYmxlOiB0cnVlLCBkYXRhVHlwZTogJ2RhdGUnLCB2YWx1ZTogdG9kYXksIGRpc2FibGVkOiB0cnVlLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAga2V5OiAnZWZmZWN0aXZlRGF0ZScsIGxhYmVsOiAn7Jyg7Zqo7J287J6QJywgc29ydGFibGU6IHRydWUsIGRhdGFUeXBlOiAnZGF0ZScsIHZhbHVlOiB0aGlzLmVuZERhdGUsDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICBrZXk6ICdwZXJzb25Db2RlSW5DaGFyZ2UnLCBsYWJlbDogJ+qyrOyggeuLtOuLueyekCcsIHNvcnRhYmxlOiB0cnVlLCB2YWx1ZTogJ0dEVycsIGRpc2FibGVkOiB0cnVlLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAga2V5OiAnZXN0aW1hdGVSZXF1ZXN0ZXInLCBsYWJlbDogJ+qyrOyggeyalOyyreyekCcsIHNvcnRhYmxlOiB0cnVlLCB2YWx1ZTogJ0dEVycsIGRpc2FibGVkOiB0cnVlLA0KICAgICAgICB9LA0KICAgICAgICB7IGtleTogJ2Rlc2NyaXB0aW9uJywgbGFiZWw6ICfruYTqs6AnLCBzb3J0YWJsZTogdHJ1ZSB9LA0KICAgICAgXSwNCiAgICAgIGRldGFpbFRhYmxlQ29sdW1uczogWw0KICAgICAgICB7DQogICAgICAgICAga2V5OiAnaXRlbUNvZGUnLA0KICAgICAgICAgIGxhYmVsOiAn7ZKI66qp7L2U65OcJywNCiAgICAgICAgICBzb3J0YWJsZTogdHJ1ZSwNCiAgICAgICAgICBkYXRhVHlwZTogJ3NlbGVjdFRvSW5wdXQnLA0KICAgICAgICAgIG9wdGlvbnM6IHRoaXMuaXRlbU9wdGlvbnMsDQogICAgICAgICAgdmFsdWU6ICdpdGVtJywNCiAgICAgICAgICBUbzogew0KICAgICAgICAgICAgdG9LZXk6ICdpdGVtTmFtZScsIGxhYmVsOiAn7ZKI66qp66qFJywNCiAgICAgICAgICB9LA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAga2V5OiAnaXRlbU5hbWUnLCBsYWJlbDogJ+2SiOuqqeuqhScsIHNvcnRhYmxlOiB0cnVlLCBoaWRlOiB0cnVlLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAga2V5OiAndW5pdE9mRXN0aW1hdGUnLCBsYWJlbDogJ+uLqOychCcsIHNvcnRhYmxlOiB0cnVlLCB2YWx1ZTogJ0VBJywNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIGtleTogJ2R1ZURhdGVPZkVzdGltYXRlJywgbGFiZWw6ICfrgqnquLDsnbwnLCBzb3J0YWJsZTogdHJ1ZSwgZGF0YVR5cGU6ICdkYXRlJywgdmFsdWU6IHRoaXMuZW5kRGF0ZSwNCiAgICAgICAgfSwNCiAgICAgICAgeyBrZXk6ICdlc3RpbWF0ZUFtb3VudCcsIGxhYmVsOiAn6rKs7KCB7IiY65+JJywgc29ydGFibGU6IHRydWUgfSwNCiAgICAgICAgew0KICAgICAgICAgIGtleTogJ3VuaXRQcmljZU9mRXN0aW1hdGUnLCBsYWJlbDogJ+qyrOyggeuLqOqwgCcsIHNvcnRhYmxlOiB0cnVlLCBoaWRlOiB0cnVlLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAga2V5OiAnc3VtUHJpY2VPZkVzdGltYXRlJywgbGFiZWw6ICftlanqs4TslaEnLCBzb3J0YWJsZTogdHJ1ZSwgaGlkZTogdHJ1ZSwNCiAgICAgICAgfSwNCiAgICAgICAgeyBrZXk6ICdkZXNjcmlwdGlvbicsIGxhYmVsOiAn67mE6rOgJywgc29ydGFibGU6IHRydWUgfSwNCiAgICAgIF0sDQogICAgfSwNCiAgICBdDQoNCiAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9UQUJMRScsIHRhYmxlQ29sdW1ucykNCg0KICAgIC8vIHRoaXMuc2VhcmNoQ29udHJhY3QoJ3NlYXJjaEJ5RGF0ZScpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBzaG93TWUoKSB7DQogICAgICBjb25zb2xlLmxvZyh0aGlzLmN1c3RvbWVyQ29kZSkNCiAgICB9LA0KICAgIGdldERhdGUoc3RhcnREYXRlLCBlbmREYXRlKSB7DQogICAgICBjb25zdCBzZW5kRGF0ZSA9IHsgc3RhcnREYXRlLCBlbmREYXRlIH0NCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdsb2dpL3NhbGVzL3NlYXJjaEVzdGltYXRlSW5Db250cmFjdEF2YWlsYWJsZScsIHNlbmREYXRlKQ0KICAgIH0sDQogICAgZ2V0Q3VzdG9tZXIoY3VzdG9tZXJDb2RlLCBjdXN0b21lck5hbWUpIHsNCiAgICAgIGNvbnNvbGUubG9nKGN1c3RvbWVyQ29kZSkNCiAgICAgIGNvbnNvbGUubG9nKGN1c3RvbWVyTmFtZSkNCiAgICB9LA0KDQoNCg0KICAgIGdldEdyaWREYXRhKCkgew0KICAgICAgY29uc29sZS5sb2coJ2dldEdyaWREYXRhJykNCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdsb2dpL3dvcmtJbnN0cnVjdGlvbi9TSE9XX1dPUktfSU5GT19MSVNUJykNCiAgICB9LA0KDQoNCg0KICAgIHNob3dHcmlkRGF0YSh2YWwpIHsNCiAgICAgIGNvbnNvbGUubG9nKHZhbCkNCiAgICB9LA0KDQoNCg0KICAgIGdyaWRJbnB1dE1vZGFsKCkgew0KICAgIH0sDQoNCg0KDQogICAgYXN5bmMgZGV0YWlsR3JpZElucHV0TW9kYWwocm93RGF0YSkgew0KICAgICAgY29uc3QgdW5pdFByaWNlID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2xvZ2kvYmFzZS9HRVRfU1RBTkRBUkRfVU5JVF9QUklDRScsIHJvd0RhdGFbMF0uaXRlbUNvZGUpDQoNCiAgICAgIGNvbnN0IGFtb3VudCA9IHBhcnNlSW50KHJvd0RhdGFbMF0uZXN0aW1hdGVBbW91bnQpDQogICAgICBjb25zdCBjYWxjdWxhdGlvbiA9IGFtb3VudCAqIHVuaXRQcmljZQ0KDQogICAgICB0aGlzLmRldGFpbEdyaWRbdGhpcy5kZXRhaWxHcmlkLmxlbmd0aCAtIDFdLnVuaXRQcmljZU9mRXN0aW1hdGUgPSB1bml0UHJpY2UNCiAgICAgIHRoaXMuZGV0YWlsR3JpZFt0aGlzLmRldGFpbEdyaWQubGVuZ3RoIC0gMV0uc3VtUHJpY2VPZkVzdGltYXRlID0gY2FsY3VsYXRpb24NCiAgICB9LA0KDQoNCg0KICAgIGFzeW5jIHJlZ2lzdERhdGEoKSB7DQogICAgICBjb25zdCBjdXN0b21lckluZm8gPSB0aGlzLmN1c3RvbWVyQ29kZUxpc3QuZmlsdGVyKGUgPT4gZS5jdXN0b21lck5hbWUgPT09IHRoaXMuZ3JpZFswXS5jdXN0b21lckNvZGUpDQogICAgICBjb25zdCBkZXRhaWxHcmlkRGF0YSA9IHRoaXMuZGV0YWlsR3JpZC5tYXAoZSA9PiB7DQogICAgICAgIGUuc3RhdHVzID0gJ0lOU0VSVCcNCiAgICAgICAgcmV0dXJuIGUNCiAgICAgIH0pDQogICAgICBjb25zdCBuZXdFc3RpbWF0ZSA9IHsgbmV3RXN0aW1hdGVJbmZvOiB7IC4uLnRoaXMuZ3JpZFswXSwgZXN0aW1hdGVEZXRhaWxUT0xpc3Q6IGRldGFpbEdyaWREYXRhIH0gfQ0KDQogICAgICBuZXdFc3RpbWF0ZS5uZXdFc3RpbWF0ZUluZm8uY3VzdG9tZXJDb2RlID0gY3VzdG9tZXJJbmZvWzBdLmN1c3RvbWVyQ29kZQ0KICAgICAgY29uc3QgaXNTdWNjZXNzID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2xvZ2kvc2FsZXMvQUREX05FV19FU1RJTUFURScsIG5ld0VzdGltYXRlKQ0KICAgICAgaWYgKGlzU3VjY2Vzcykgew0KICAgICAgICB0aGlzLiRzd2FsLmZpcmUoDQogICAgICAgICAgJ+uTseuhnSDshLHqs7UhJywNCiAgICAgICAgICAn7Y6Y7J207KeA66W8IOyDiOuhnOqzoOy5qO2VqeuLiOuLpC4nLA0KICAgICAgICAgICdzdWNjZXNzJywNCiAgICAgICAgKS50aGVuKCgpID0+IHsNCiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1JFU0VUX0dSSUQnKQ0KICAgICAgICB9KQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy4kc3dhbC5maXJlKHsNCiAgICAgICAgICBpY29uOiAnZXJyb3InLA0KICAgICAgICAgIHRpdGxlOiAn65Ox66GdIOyLpO2MqCcsDQogICAgICAgICAgdGV4dDogJ+qyrOyggeydhCDri6Tsi5wg7ZmV7J247ZW07KO87IS47JqULicsDQogICAgICAgIH0pDQogICAgICB9DQogICAgfSwNCg0KDQoNCiAgfSwNCn0NCg0KDQoNCg=="},{"version":3,"sources":["EstimateRegisteUpgrade.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"EstimateRegisteUpgrade.vue","sourceRoot":"src/views/logistic/sales/Estimate","sourcesContent":["<template>\r\n  <!--  <div>\r\n    <WorkInstructionGrid>\r\n      <template v-slot:header>\r\n        <h2\r\n          class=\"mb-md-1\"\r\n          style=\"width: 100px\"\r\n        >\r\n          작업지시\r\n        </h2>\r\n      </template>\r\n    </WorkInstructionGrid>\r\n    <WorkInstructionDetailGrid>SET_TABLE\r\n      <template v-slot:header>\r\n        <h2>\r\n          작업지시현황\r\n        </h2>\r\n      </template>\r\n    </WorkInstructionDetailGrid>\r\n  </div>-->\r\n  <!--  <CommonGrid\r\n          grid-type=\"grid\"\r\n          :buttonlist=\"buttonList\"\r\n          title=\"작업지시\"\r\n          :datepicker=\"true\"\r\n          :search-customer=\"true\"\r\n          @get-date=\"getDate\"\r\n          @get-customer=\"getCustomer\"\r\n          @get-grid-data=\"getGridData\"\r\n  />-->\r\n  <div>\r\n    <CommonGrid\r\n      grid-type=\"grid\"\r\n      :buttonlist=\"buttonList\"\r\n      title=\"견적등록\"\r\n      column-width=\"1700px\"\r\n      only-one=\"true\"\r\n      @row-selected=\"showGridData\"\r\n      @find-data=\"getGridData\"\r\n      @input-modal=\"gridInputModal\"\r\n      @regist-data=\"registData\"\r\n    />\r\n    <CommonGrid\r\n      grid-type=\"detailGrid\"\r\n      title=\"견적상세\"\r\n      :buttonlist=\"detailGridbuttonList\"\r\n      @input-modal=\"detailGridInputModal\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  BCard, BRow, BCol, BFormInput, BButton, BTable, BMedia, BAvatar, BLink, BFormRadioGroup, BCardText,\r\n  BBadge, BDropdown, BDropdownItem, BPagination, BTooltip, BFormDatepicker, BInputGroup, BInputGroupAppend,\r\n  BFormGroup,\r\n} from 'bootstrap-vue'\r\nimport BEditableTable from 'bootstrap-vue-editable-table'\r\nimport WorkInstructionGrid from '@/components/logistic/production/workInstruction/WorkInstructionGrid'\r\nimport WorkInstructionDetailGrid from '@/components/logistic/production/workInstruction/WorkInstructionDetailGrid'\r\nimport CommonGrid from '@/components/logistic/sales/gridComponent/CommonGrid'\r\nimport { mapActions, mapState } from 'vuex'\r\n\r\nexport default {\r\n  components: {\r\n    BCard,\r\n    BRow,\r\n    BCol,\r\n    BFormInput,\r\n    BButton,\r\n    BTable,\r\n    BMedia,\r\n    BAvatar,\r\n    BLink,\r\n    BBadge,\r\n    BDropdown,\r\n    BDropdownItem,\r\n    BPagination,\r\n    BTooltip,\r\n    BFormDatepicker,\r\n    BInputGroup,\r\n    BInputGroupAppend,\r\n    BEditableTable,\r\n    BFormRadioGroup,\r\n    BCardText,\r\n    BFormGroup,\r\n\r\n    WorkInstructionGrid,\r\n    WorkInstructionDetailGrid,\r\n    CommonGrid,\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      grid: state => state.grid,\r\n      detailGrid: state => state.detailGrid,\r\n      customerCodeList: state => state.hr.company.companyCodeList,\r\n      itemList: state => state.logi.base.itemList,\r\n    }),\r\n  },\r\n  data: () => ({\r\n    startDate: '0000-00-0',\r\n    endDate: '0000-00-0',\r\n    selected: '',\r\n    workplaceName: '',\r\n    workplaceCode: '',\r\n    searchWorkplace: '',\r\n    companyCode: 'BRC-01',\r\n    searchCompanyCodeOption: '',\r\n    options: [],\r\n    buttonList: [\r\n      {\r\n        value: '추가',\r\n        event: 'add',\r\n      },\r\n      {\r\n        value: '등록',\r\n        event: 'regist',\r\n      },\r\n    ],\r\n    itemOptions: [],\r\n    detailGridbuttonList: [\r\n      {\r\n        value: '추가',\r\n        event: 'add',\r\n      },\r\n    ],\r\n    itemNameValue: '',\r\n  }),\r\n\r\n  watch: {\r\n    searchCompanyCodeOption(newValue) {\r\n      if (newValue !== '') {\r\n        const searchOption = { searchCondition: newValue, workplaceCode: this.companyCode }\r\n        this.$store.dispatch('hr/company/searchCustomerList', searchOption)\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.$store.commit('RESET_GRID')\r\n    const searchOption = { searchCondition: 'ALL', workplaceCode: 'BRC-01' }\r\n    this.$store.dispatch('hr/company/searchCustomerList', searchOption)\r\n    this.$store.dispatch('logi/base/SEARCH_ITEM', 'IT-_I')\r\n    let dataList = []\r\n    this.customerCodeList.map(e => {\r\n      const { customerName } = e\r\n      dataList.push({ text: customerName, value: customerName })\r\n    })\r\n    console.log(this.customerCodeList)\r\n    console.log(dataList)\r\n    this.options = dataList\r\n\r\n    dataList = []\r\n\r\n    this.itemList.map(e => {\r\n      const { detailCodeName, detailCode } = e\r\n      dataList.push({ text: detailCode, value: detailCodeName })\r\n    })\r\n\r\n    this.itemOptions = dataList\r\n\r\n    const date = new Date()\r\n    const year = date.getFullYear()\r\n    const month = String(date.getMonth() + 1).padStart(2, '0')\r\n    const day = String(date.getDate()).padStart(2, '0')\r\n    const today = `${year}-${month}-${day}`\r\n    const lastday = new Date(year, month, 0).getDate()\r\n    this.startDate = `${year}-${month}-01`\r\n    this.endDate = `${year}-${month}-${lastday}`\r\n\r\n    const tableColumns = [{\r\n      tableColumns: [\r\n        {\r\n          key: 'customerCode',\r\n          label: '거래처명',\r\n          sortable: true,\r\n          dataType: 'select',\r\n          options: this.options,\r\n        },\r\n        {\r\n          key: 'estimateDate', label: '견적일자', sortable: true, dataType: 'date', value: today, disabled: true,\r\n        },\r\n        {\r\n          key: 'effectiveDate', label: '유효일자', sortable: true, dataType: 'date', value: this.endDate,\r\n        },\r\n        {\r\n          key: 'personCodeInCharge', label: '견적담당자', sortable: true, value: 'GDW', disabled: true,\r\n        },\r\n        {\r\n          key: 'estimateRequester', label: '견적요청자', sortable: true, value: 'GDW', disabled: true,\r\n        },\r\n        { key: 'description', label: '비고', sortable: true },\r\n      ],\r\n      detailTableColumns: [\r\n        {\r\n          key: 'itemCode',\r\n          label: '품목코드',\r\n          sortable: true,\r\n          dataType: 'selectToInput',\r\n          options: this.itemOptions,\r\n          value: 'item',\r\n          To: {\r\n            toKey: 'itemName', label: '품목명',\r\n          },\r\n        },\r\n        {\r\n          key: 'itemName', label: '품목명', sortable: true, hide: true,\r\n        },\r\n        {\r\n          key: 'unitOfEstimate', label: '단위', sortable: true, value: 'EA',\r\n        },\r\n        {\r\n          key: 'dueDateOfEstimate', label: '납기일', sortable: true, dataType: 'date', value: this.endDate,\r\n        },\r\n        { key: 'estimateAmount', label: '견적수량', sortable: true },\r\n        {\r\n          key: 'unitPriceOfEstimate', label: '견적단가', sortable: true, hide: true,\r\n        },\r\n        {\r\n          key: 'sumPriceOfEstimate', label: '합계액', sortable: true, hide: true,\r\n        },\r\n        { key: 'description', label: '비고', sortable: true },\r\n      ],\r\n    },\r\n    ]\r\n\r\n    this.$store.commit('SET_TABLE', tableColumns)\r\n\r\n    // this.searchContract('searchByDate')\r\n  },\r\n  methods: {\r\n    showMe() {\r\n      console.log(this.customerCode)\r\n    },\r\n    getDate(startDate, endDate) {\r\n      const sendDate = { startDate, endDate }\r\n      this.$store.dispatch('logi/sales/searchEstimateInContractAvailable', sendDate)\r\n    },\r\n    getCustomer(customerCode, customerName) {\r\n      console.log(customerCode)\r\n      console.log(customerName)\r\n    },\r\n\r\n\r\n\r\n    getGridData() {\r\n      console.log('getGridData')\r\n      this.$store.dispatch('logi/workInstruction/SHOW_WORK_INFO_LIST')\r\n    },\r\n\r\n\r\n\r\n    showGridData(val) {\r\n      console.log(val)\r\n    },\r\n\r\n\r\n\r\n    gridInputModal() {\r\n    },\r\n\r\n\r\n\r\n    async detailGridInputModal(rowData) {\r\n      const unitPrice = await this.$store.dispatch('logi/base/GET_STANDARD_UNIT_PRICE', rowData[0].itemCode)\r\n\r\n      const amount = parseInt(rowData[0].estimateAmount)\r\n      const calculation = amount * unitPrice\r\n\r\n      this.detailGrid[this.detailGrid.length - 1].unitPriceOfEstimate = unitPrice\r\n      this.detailGrid[this.detailGrid.length - 1].sumPriceOfEstimate = calculation\r\n    },\r\n\r\n\r\n\r\n    async registData() {\r\n      const customerInfo = this.customerCodeList.filter(e => e.customerName === this.grid[0].customerCode)\r\n      const detailGridData = this.detailGrid.map(e => {\r\n        e.status = 'INSERT'\r\n        return e\r\n      })\r\n      const newEstimate = { newEstimateInfo: { ...this.grid[0], estimateDetailTOList: detailGridData } }\r\n\r\n      newEstimate.newEstimateInfo.customerCode = customerInfo[0].customerCode\r\n      const isSuccess = await this.$store.dispatch('logi/sales/ADD_NEW_ESTIMATE', newEstimate)\r\n      if (isSuccess) {\r\n        this.$swal.fire(\r\n          '등록 성공!',\r\n          '페이지를 새로고침합니다.',\r\n          'success',\r\n        ).then(() => {\r\n          this.$store.commit('RESET_GRID')\r\n        })\r\n      } else {\r\n        this.$swal.fire({\r\n          icon: 'error',\r\n          title: '등록 실패',\r\n          text: '견적을 다시 확인해주세요.',\r\n        })\r\n      }\r\n    },\r\n\r\n\r\n\r\n  },\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n  @import 'src/assets/scss/scrollStyle';\r\n  body{\r\n    font-family: \"배달의민족 도현\";\r\n  }\r\n</style>\r\n"]}]}