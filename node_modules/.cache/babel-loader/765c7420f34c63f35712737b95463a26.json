{"remainingRequest":"C:\\Users\\tmdgu\\vue_front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\tmdgu\\vue_front\\src\\store\\account\\account\\action.js","dependencies":[{"path":"C:\\Users\\tmdgu\\vue_front\\src\\store\\account\\account\\action.js","mtime":1683620028762},{"path":"C:\\Users\\tmdgu\\vue_front\\babel.config.js","mtime":1683620026767},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682425602778},{"path":"C:\\Users\\tmdgu\\vue_front\\node_modules\\babel-loader\\lib\\index.js","mtime":1683631548959}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/tmdgu/vue_front/src/store/account/account/action.js"],"names":["deleteSlip","registerSlip","selectSlip","selectSlips","editSlip","approvalSlip","selectJournals","FETCH_ALL_SLIP","commit","response","data","SlipList","Error","FETCH_SLIP","slipNo","slipForm","DELETE_SLIP","_","slipList","CREATE_SLIP","slip","newSlipNo","EDIT_SLIP","updateSlipNo","APPROVAL_SLIP","updateList","reduce","pre","then","push","Promise","resolve","SEARCH_JOURNAL","date"],"mappings":"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","sourcesContent":["import {\r\n  deleteSlip, registerSlip, selectSlip, selectSlips, editSlip, approvalSlip, selectJournals,\r\n} from '@/api/account/account'\r\n\r\nexport default {\r\n  /**\r\n   * 전표전체조회\r\n   * @param commit\r\n   * @returns {Promise<*>}\r\n   * @constructor\r\n   */\r\n  async FETCH_ALL_SLIP({ commit }) { // 객체로 넘어오면 {}\r\n    try {\r\n      const response = await selectSlips()\r\n\r\n      commit('SET_SILP_LIST', response.data.SlipList)\r\n      // eslint-disable-next-line no-undef\r\n      return response.data\r\n    } catch (err) {\r\n      throw new Error(err)\r\n    }\r\n  },\r\n  /**\r\n   * 전표한개조회\r\n   * @param commit\r\n   * @param slipNo\r\n   * @returns {Promise<{slipNo: string, reportingEmpName: string, approvalDate: string, reportingEmpCode: string, slipStatus: string, accountPeriodNo: string, expenseReport: string, reportingDate: string, slipType: string, deptCode: string, status: string}|{}|*>}\r\n   * @constructor\r\n   */\r\n  async FETCH_SLIP({ commit }, slipNo) { // 객체로 넘어오면 {}\r\n    try {\r\n      const { data } = await selectSlip(slipNo)\r\n      commit('SET_SILP', data.slipForm)\r\n      return data.slipForm\r\n    } catch (err) {\r\n      throw new Error(err)\r\n    }\r\n  },\r\n  /**\r\n   * 전표삭제\r\n   * @param _\r\n   * @param slipList\r\n   * @returns {Promise<*>}\r\n   * @constructor\r\n   */\r\n  async DELETE_SLIP(_, slipList) {\r\n    try {\r\n      return await deleteSlip(slipList)\r\n    } catch (err) {\r\n      throw new Error(err)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 전표등록\r\n   * @param _\r\n   * @param slip\r\n   * @returns {Promise<*>}\r\n   * @constructor\r\n   */\r\n  async CREATE_SLIP(_, slip) { // 객체로 넘어오면 {}\r\n    try {\r\n      const response = await registerSlip(slip)\r\n      return response.data.newSlipNo\r\n    } catch (err) {\r\n      throw new Error(err)\r\n    }\r\n  },\r\n  /**\r\n   * 전표수정\r\n   * @param _\r\n   * @param slip\r\n   * @returns {Promise<*>}\r\n   * @constructor\r\n   */\r\n  async EDIT_SLIP(_, slip) { // 객체로 넘어오면 {}\r\n    try {\r\n      const response = await editSlip(slip)\r\n      return response.data.updateSlipNo\r\n    } catch (err) {\r\n      throw new Error(err)\r\n    }\r\n  },\r\n  /**\r\n   * restApi 사용하기위해 api를 여러번 호출한다.\r\n   * 비동기로 처리하기위해 reduce함수와 Promise.resolve()를 사용하여 기존 pendding상태의 promise 반환값을 이행후 반환값으로 바꿈\r\n   * 업데이트된 전표번호를 서버단에서 받고 리턴하여 화면에 업데이트된 번호를 볼수있다.\r\n   * Promise.resolve 덕분에 빈 Promise객체로 초기화 가능\r\n   */\r\n  /**\r\n   * 전표 승인 AND 전표 반려!!!\r\n   * @param _\r\n   * @param slipList\r\n   * @returns {Promise<*[]>}\r\n   * @constructor\r\n   */\r\n  async APPROVAL_SLIP(_, slipList) {\r\n    try {\r\n      const updateList = []\r\n      await slipList.reduce((pre, slip) => pre.then(async () => {\r\n        const response = await approvalSlip(slip)\r\n        updateList.push(response.data.updateSlipNo)\r\n      }), Promise.resolve())\r\n      return updateList\r\n    } catch (err) {\r\n      throw new Error(err)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 분개장\r\n   * @param commit\r\n   * @param date\r\n   * @returns {Promise<*>}\r\n   * @constructor\r\n   */\r\n  async SEARCH_JOURNAL({ commit }, date = {}) {\r\n    try {\r\n      const response = await selectJournals(date)\r\n      commit('SET_JOURNAL_LIST', response.data)\r\n      return response\r\n    } catch (err) {\r\n      throw new Error(err)\r\n    }\r\n  },\r\n\r\n}\r\n"]}]}